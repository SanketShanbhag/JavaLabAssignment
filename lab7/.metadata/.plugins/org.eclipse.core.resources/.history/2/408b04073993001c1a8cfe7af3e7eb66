package com.cg.eis.service;

import java.util.HashMap;
import java.util.Map;

import com.cg.eis.bean.Employee;
import com.cg.eis.exception.NotFoundException;

public class EmployeeServiceImpl implements EmployeeServiceInterface {
	
	   public static HashMap<Integer, Employee> empMap = new HashMap<Integer, Employee>();
	   public static int c = 0;
	   
	   @Override
		public String setDesignation() {
			Employee e=new Employee();
			
			if(e.getSalary()<5000){
				return "Clerk";
			}
			else if(e.getSalary()>5000 && e.getSalary()<20000){
				return "System Associate";
			}
			else if(e.getSalary()>=20000 && e.getSalary()<40000){
				return "Programmer";
			}
			else{
				return "Manager";
			}
			
		}
	   
	   @Override
		public String setInsuranceScheme() {
		   Employee e=new Employee();
		   if (e.getSalary() > 5000 && e.getSalary() < 20000) {
		          
		        return "scheme c";
		         
		   		}
		   		else if (e.getSalary() >= 20000 && e.getSalary() < 40000) {
		         
		   			return "scheme b";
		         
		   		}
		   		else if (e.getSalary() >= 40000) {
		         
		   			return "scheme a";
		         
		   		}
		   		else if (e.getSalary() < 5000) {
		        
		   			return  "no scheme";
		        
		   }else {
		   return null;
		   }
			
		}

	   @Override
	   public void addEmployee(Employee emp) throws NotFoundException {
		   if(emp.getId()==0||emp.getName()==null||emp.getSalary()==0)
			{
				throw new NotFoundException("Insufficient Information");
			}else {
				empMap.put(emp.getId(), emp);
			}
	   }
	   
	   @Override
	   public boolean deleteEmployee(int id)throws NotFoundException {
	      if (empMap.containsKey(id)) {
	         empMap.remove(id);
	         return true;
	      }
	      return false;
	   }
	   
	   @Override
	   public void showEmpDetails(){
		      
		   System.out.println(empMap.toString());

		     
	   }

	

	

}
