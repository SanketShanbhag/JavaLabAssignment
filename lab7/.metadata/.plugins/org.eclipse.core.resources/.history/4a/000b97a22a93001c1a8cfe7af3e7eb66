package com.cg.eis.service;

import java.util.HashMap;
import java.util.Map;

import com.cg.eis.bean.Employee;
import com.cg.eis.exception.NotFoundException;

public class EmployeeServiceImpl implements EmployeeServiceInterface {
	
	   public static HashMap<Integer, Employee> empMap = new HashMap<Integer, Employee>();
	   public static int c = 0;
	   
	   @Override
		public void setDesignation() {
			Employee e=new Employee();
			
			if(e.getSalary()<5000){
				e.setDesignation("Clerk");
			}
			else if(e.getSalary()>5000 && e.getSalary()<20000){
				e.setDesignation("System Associate");
			}
			else if(e.getSalary()>=20000 && e.getSalary()<40000){
				e.setDesignation("Programmer");
			}
			else{
				e.setDesignation("Manager");
			}
			
		}
	   
	   @Override
		public void setInsuranceScheme() {
		   Employee e=new Employee();
		   if (e.getSalary() > 5000 && e.getSalary() < 20000) {
		          
		         e.setInsuranceScheme("scheme c");
		         
		   }
		   if (e.getSalary() >= 20000 && e.getSalary() < 40000) {
		         
		         e.setInsuranceScheme("scheme b");
		         
		   }
		   if (e.getSalary() >= 40000) {
		         
		         e.setInsuranceScheme("scheme a");
		         
		   }
		   if (e.getSalary() < 5000) {
		        
		         e.setInsuranceScheme("no scheme");
		        
		   }
		      
			
		}

	   @Override
	   public void addEmployee(Employee emp) throws NotFoundException {
		   if(emp.getId()==0||emp.getName()==null||emp.getSalary()==0)
			{
				throw new NotFoundException("Insufficient Information");
			}else {
				empMap.put(emp.getId(), emp);
			}
	   }
	   
	   @Override
	   public boolean deleteEmployee(int id)throws NotFoundException {
	      if (empMap.containsKey(id)) {
	         empMap.remove(id);
	         return true;
	      }
	      return false;
	   }
	   
	   @Override
	   public String showEmpDetails(String InsuranceScheme) {
		      for (Map.Entry<Integer, Employee> mapEntry : empMap.entrySet()) {
		         Employee obj = ((Employee) mapEntry.getValue());
		         if (InsuranceScheme.equals(obj.getInsuranceScheme(obj.getSalary()))) {
		            return "Name: " + obj.getName() + " Id: " + obj.getId() + " Salary: " + obj.getSalary() + " Designation: "
		                  + obj.getDesignation() + " InsuranceScheme: " +obj.getInsuranceScheme();
		         }
		      }
		      return null;
	   }

	

	

}
